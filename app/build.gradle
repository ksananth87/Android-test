apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply from: '../jacoco.gradle'

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.2"
    testOptions {
        unitTests.returnDefaultValues = true
    }
    defaultConfig {
        applicationId "com.revolut.androidtest"
        minSdkVersion 22
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        debug {
            testCoverageEnabled = true
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility = '1.8'
        targetCompatibility = '1.8'
    }
    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/LICENSE'
    }
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.core:core-ktx:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'

    //Navigation
    implementation 'androidx.navigation:navigation-fragment-ktx:2.2.0'
    implementation 'androidx.navigation:navigation-ui-ktx:2.2.0'

    //Testing
    testImplementation 'androidx.arch.core:core-testing:2.1.0'
    testImplementation 'junit:junit:4.12'
    testImplementation 'pl.pragmatists:JUnitParams:1.1.0'
    testImplementation 'org.mockito:mockito-core:3.2.0'
    testImplementation 'org.hamcrest:hamcrest-core:2.1'
    testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:2.2.0"

    // Android Testing Support Library's runner and rules
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test:rules:1.0.2'
    // Espresso UI Testing
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    androidTestImplementation("com.android.support.test.espresso:espresso-contrib:3.0.2") {
        // Necessary to avoid version conflicts
        exclude group: 'com.android.support', module: 'appcompat'
        exclude group: 'com.android.support', module: 'support-v4'
        exclude group: 'com.android.support', module: 'support-annotations'
        exclude module: 'recyclerview-v7'
    }
    // UIAutomator Testing.
    androidTestImplementation 'com.android.support.test.uiautomator:uiautomator-v18:2.1.3'
    androidTestImplementation "org.mockito:mockito-android:2.18.3"
    androidTestImplementation("com.github.tomakehurst:wiremock:2.0.8-beta")


    //Recycleview
    implementation 'androidx.recyclerview:recyclerview:1.2.0-alpha01'

    //Swipe
    implementation "androidx.swiperefreshlayout:swiperefreshlayout:1.1.0-alpha03"

    //Glide
    implementation "com.github.bumptech.glide:glide:4.10.0"

    // retrofit
    implementation 'com.squareup.retrofit2:retrofit:2.7.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.5.0'

    // RxJava
    implementation 'io.reactivex.rxjava2:rxjava:2.2.16'
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.0'
    implementation 'com.jakewharton.retrofit:retrofit2-rxjava2-adapter:1.0.0'

    //Lifecycle
    implementation 'androidx.lifecycle:lifecycle-extensions:2.1.0'
}

configurations {
    all*.exclude group: 'commons-logging', module: 'commons-logging'
    all*.exclude group: 'com.android.support', module: 'support-annotations'
    all*.exclude group: 'asm', module: 'asm'
}

sonarqube {
    properties {
        property "sonar.projectKey", "ksananth87_Test"
        property "sonar.sources", "${project.projectDir}/src/main/java"
        property "sonar.tests", "${project.projectDir}/src/test/java"
        property "sonar.junit.reportPaths", "${project.buildDir}/test-results/testDebugUnitTest"
        property "sonar.coverage.exclusions", "**/Channel.java,**/LoggerUtils.java,**/RegexUtils.java,**/AdobeValues.java,**/analytics/cases/**/*"
        property "sonar.java.coveragePlugin", "jacoco"
        property "sonar.android.lint.report", "${project.buildDir}/outputs/lint-results.xml"
        property "sonar.java.binaries", "${project.buildDir}/intermediates/javac/debug/compileDebugJavaWithJavac/classes,${project.buildDir}/tmp/kotlin-classes/debug"
        property "sonar.test.binaries", "${project.buildDir}/intermediates/javac/debugUnitTest/compileDebugUnitTestJavaWithJavac/classes/,${project.buildDir}/tmp/kotlin-classes/debug"
        property "sonar.coverage.jacoco.xmlReportPaths", "${project.buildDir}/reports/jacoco/testDebugUnitTestCoverage/testDebugUnitTestCoverage.xml"
    }
}
